version: '3.7'

services:
  client:
    container_name: client
    image: pepe-commerce/client:1.0.0
    build:
      context: ./packages/client
      dockerfile: dev.Dockerfile
      args:
        - uid=$UID
        - gid=$GID
        - user=$USER
    volumes:
      - .:/pepe-commerce
    ports:
      - 3000:3000
    working_dir: /pepe-commerce/packages/client
    command: yarn dev

  admin:
    container_name: admin
    image: pepe-commerce/admin:1.0.0
    build:
      context: ./packages/admin
      dockerfile: dev.Dockerfile
      args:
        - uid=$UID
        - gid=$GID
        - user=$USER
    volumes:
      - .:/pepe-commerce
    ports:
      - 3001:3000
    working_dir: /pepe-commerce/packages/admin
    command: yarn dev

  server:
    container_name: server
    image: pepe-commerce/server:1.0.0
    build:
      context: ./packages/server
      dockerfile: dev.Dockerfile
      args:
        - uid=$UID
        - gid=$GID
        - user=$USER
    volumes:
      - .:/pepe-commerce
      # Mount AWS config file to the docker container.
      # - ~/.aws:/home/$USER/.aws
    ports:
      - 3002:3000
    # Those services will start first.
    depends_on:
      - mongo-dev
    # `links` allows to reference services by their names (e.g. `postgres-dev`) instead of ip addresses.
    links:
      - mongo-dev
    working_dir: /pepe-commerce/packages/server
    command: yarn dev
    env_file:
      - ./packages/server/.env.development
    environment:
      MONGO_DEV_DATABASE: pepe-commerce
      MONGO_DEV_HOST: mongo-dev
      MONGO_DEV_PASSWORD: password
      MONGO_DEV_PORT: 27017
      MONGO_DEV_USER: root
      PORT: 3000

  mongo-dev:
    container_name: mongo-dev
    image: library/mongo:4.4.5-bionic
    restart: always
    volumes:
      - ./data/db:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: pepe-commerce
